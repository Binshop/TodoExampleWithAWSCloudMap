AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: A demo app for cloud map service discovery

Resources:
  FunctionTodoWeb:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TodoWeb
      Handler: Todo.Web::Todo.Web.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnetcore3.1
      CodeUri: ../../Todo.Web
      MemorySize: 256
      Timeout: 30
      Events:
        MyResources:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref TodoGateway
  FunctionTodoApi:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TodoApi
      Handler: Todo.WebApi::Todo.WebApi.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnetcore3.1
      CodeUri: ../../Todo.WebApi
      MemorySize: 256
      Timeout: 30
      Events:
        MyResources:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref GatewayTodo
  GatewayTodo:
    Type: AWS::Serverless::Api
    Properties:
      Name: TodoGW
      StageName: prod
      MethodSettings:
        - LoggingLevel: ERROR
          ResourcePath: /*
          HttpMethod: "*"
      TracingEnabled: true
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        swagger: 2.0
        schemes:
          - https
        paths:
        /web/{proxy+}: #all resources are not public default. unless make them public by removing the security property.
          x-amazon-apigateway-any-method:
          x-amazon-apigateway-integration:
            uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TodoWeb.Alias}/invocations
            httpMethod: POST
            type: aws_proxy
        /backend/{proxy+}:
          x-amazon-apigateway-any-method:
          x-amazon-apigateway-integration:
            uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TodoApi.Alias}/invocations
            httpMethod: POST
            type: aws_proxy
  DynamodbTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: TodoItem
      BillingMode: PAY_PER_REQUEST,
      SSESpecification:
        SSEEnabled: true
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
        - AttributeName: Created
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
        - AttributeName: Created
          KeyType: RANGE
      Tags:
        - Key: eway:app
          Value: todo backend
  TodoWeb:
    Type: AWS::ServiceDiscovery::Instance
    Properties:
      InstanceAttributes:
        TODO_REGION: !sub ${AWS::Region}
        TODO_VERSION: v1
        TODO_STAGE: prod
        TODO_ENDPOINT: !sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/web
      ServiceId: srv-slpheaedaxefyxn7
  TodoApi:
    Type: AWS::ServiceDiscovery::Instance
    Properties:
      InstanceAttributes:
        TODO_VERSION: v1
        TODO_REGION: !ref ${AWS::Region}
        TODO_STAGE: prod
        TODO_ENDPOINT: !sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/backend
      ServiceId: srv-kkyqi2j32fgtldkv

Outputs:
  FrontendURL:
    Description: "Endpoint of the App frontend"
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/web
  BackendURL:
    Description: "Endpoint of the App backend"
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/backend
